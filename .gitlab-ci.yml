# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:git

services:
  - docker:dind

stages:
  - build
  - test
  - publish

before_script:
  - docker info
  # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - git clone git://github.com/mendersoftware/mendertesting
  - . mendertesting/check_commits.sh
  - export DOCKER_REPOSITORY="mendersoftware/gui"
  - export GIT_REF=${CI_BUILD_REF_NAME}
  - export DOCKER_TAG=${CI_BUILD_REF_SLUG/master/production}
  - export NODE_ENV=$(echo "$DOCKER_TAG" | grep -Eq '^(staging|production)$' && echo "production" || echo "development")
  - export SERVICE_ENV=$(echo "$DOCKER_TAG" | grep -Eq '^(development|staging|production)$' && echo $DOCKER_TAG || echo "development")
  - export SERVICE_IMAGE=$(DOCKER_REPOSITORY):$(DOCKER_TAG)

build-master:
  stage: build
  script:
    - docker build
      --pull
      --build-arg NODE_ENV=${NODE_ENV}
      -t "$SERVICE_IMAGE"
      -t "$DOCKER_REPOSITORY:$COMMIT_TAG"
      .
    - docker save $SERVICE_IMAGE > image.tar
    
  only:
    - master

build:
  stage: build
  script:
    - docker build
      --pull
      -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
      .
    - docker save $SERVICE_IMAGE > image.tar
  except:
    - master

test:
  stage: test
  script:
    - docker load -i image.tar
    - docker run $SERVICE_IMAGE npm run lint
  except:
    - master

publish:
  stage: publish
  dependencies: []
  script:
    - docker load -i image.tar
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master